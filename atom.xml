<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>崎径 其镜</title>
  <subtitle>求学道路上的行车记录仪</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.z16388.win/"/>
  <updated>2016-11-04T09:44:04.000Z</updated>
  <id>http://www.z16388.win/</id>
  
  <author>
    <name>Anqi Zhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>R语言二三事</title>
    <link href="http://www.z16388.win/2016/11/04/R%E8%AF%AD%E8%A8%80%E4%BA%8C%E4%B8%89%E4%BA%8B/"/>
    <id>http://www.z16388.win/2016/11/04/R语言二三事/</id>
    <published>2016-11-04T09:18:34.000Z</published>
    <updated>2016-11-04T09:44:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;上午上完第一节课之后，想要到图书馆寻找几本算法相关的书籍未果，偶然发现了两本不错的书。一本是《Python语言程序设计》，另一本就是《R语言初学指南》了。</p>
<p>&emsp;&emsp;早些时候我就有关注过R了，听说是一个最近很火的数据分析语言，具有强大的数据分析功能，在各领域都有所使用。这也算是第一次接触，还没回到寝室就迫不及待地打开翻了两页，顿时整个人都不好了——我看到了一堆讨厌极了的矩阵。。。</p>
<p>&emsp;&emsp;回到寝室，从序开始看，发现这是一本很浅显的书，内容的话还涉及一些行业上的实例，比如说在第三节就有一个金融数学上的例子，刚好我们才学过的一些东西都用上了。</p>
<p>&emsp;&emsp;下载好，给win和mac都安装好，摸索使用了一下，发现这真是一个非常好的数学工具。比起MATLAB臃肿的安装包，R的基础包只有不到100mb，而且足够初学者的使用，这一点我非常欣赏。虽然UI不是很理想，但是功能强大不就好了吗。</p>
<p>&emsp;&emsp;基本的语法和Python有着一定的相似之处，使用起来和MATLAB也很类似。总之，希望能够学下去吧。下面总结一下今天学到的R常用的基础语法：</p>
<hr>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="number">5</span>+<span class="number">7</span></div><div class="line">[<span class="number">1</span>] <span class="number">12</span></div></pre></td></tr></table></figure>
<p>&emsp;&emsp;和Python类似，可以直接实现两个数的运算。常用的运算除了加减乘除之外，还有乘方，例：<code>e^2</code></p>
<hr>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; sally=<span class="number">5</span>+<span class="number">7</span></div><div class="line">&gt; ralph=<span class="number">4</span>-<span class="number">2</span></div><div class="line">&gt; sally-ralph</div><div class="line">[<span class="number">1</span>] <span class="number">10</span></div></pre></td></tr></table></figure>
<p>&emsp;&emsp;可以将数据存放在变量中进行运算。</p>
<hr>
<p>&emsp;&emsp;赋值有两种方法，较老的版本使用箭头来进行赋值，现在和其他语言类似，都可以使用一个等号表示赋值，这两种方法是等价的：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; a=a+<span class="number">1</span></div><div class="line">&gt; a&lt;-a+<span class="number">1</span></div></pre></td></tr></table></figure>
<hr>
<p>向量：</p>
<p>&emsp;&emsp;向量是数学中一个相当常用的概念，在R里当然是必不可少的。我们可以通过下面的方法来创建一个向量：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; x=c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>)</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;向量可以进行加减乘除乘方等运算。除此之外，还有一种特殊的向量，用来表示一个连续的序列，例如：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; j=<span class="number">0</span>:<span class="number">5</span></div><div class="line">&gt; j</div><div class="line">[<span class="number">1</span>] <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></div></pre></td></tr></table></figure>
<p>&emsp;&emsp;冒号申请的连续序列可能在后面的过程中经常使用，比如在绘图时，可能需要很多的坐标，这时候使用这种向量会极大地方便我们的绘图工作。</p>
<hr>
<p>学习ing</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;上午上完第一节课之后，想要到图书馆寻找几本算法相关的书籍未果，偶然发现了两本不错的书。一本是《Python语言程序设计》，另一本就是《R语言初学指南》了。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;早些时候我就有关注过R了，听说是一个最近很火的数据分析语
    
    </summary>
    
    
      <category term="R" scheme="http://www.z16388.win/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>【ACM教程】3-1枚举</title>
    <link href="http://www.z16388.win/2016/11/02/%E3%80%90ACM%E6%95%99%E7%A8%8B%E3%80%913-1%E6%9E%9A%E4%B8%BE/"/>
    <id>http://www.z16388.win/2016/11/02/【ACM教程】3-1枚举/</id>
    <published>2016-11-02T07:55:31.000Z</published>
    <updated>2016-11-02T08:35:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一节-枚举"><a href="#第一节-枚举" class="headerlink" title="第一节 枚举"></a>第一节 枚举</h1><p>&emsp;&emsp;枚举又叫穷举，是程序设计中最常用的算法之一，是一种很*很暴力的算法。要说它的方法，就是没有方法——通过将所有可能的结果一一列举出来进行判断，获得想要的结果的方法。枚举算法的特点就是比较单纯，容易写出来程序，但是速度非常慢，只能用来解决小规模的问题。</p>
<p>&emsp;&emsp;常见的题型有很多，比如计算空缺算式或者是火柴棒问题，接下来我们来举例说明一道非常经典的题目，来体会一下枚举算法。</p>
<p>&emsp;&emsp;我国古代数学家章丘建在《算经》一书中提过一道数学问题：鸡翁一值钱五，鸡母一值钱散，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何。这就是经典的百钱百鸡问题。除了原书中使用的方程式之外，我们还可以使用枚举法来进行计算，代码如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i,j,k;</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;i++)</div><div class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">33</span>;j++)</div><div class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=<span class="number">100</span>;k++)</div><div class="line">    <span class="keyword">if</span>((i*<span class="number">5</span>+j*<span class="number">3</span>+k/<span class="number">3</span>==<span class="number">100</span>)&amp;&amp;(i+j+k==<span class="number">100</span>)&amp;&amp;(k%<span class="number">3</span>==<span class="number">0</span>))</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,i,j,k);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;在之前杭电的练习题中，我们也遇到过使用枚举算法的题目，hdu2010题的水仙花数就是。大家可以练习一下全排列的问题，练习一下枚举算法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一节-枚举&quot;&gt;&lt;a href=&quot;#第一节-枚举&quot; class=&quot;headerlink&quot; title=&quot;第一节 枚举&quot;&gt;&lt;/a&gt;第一节 枚举&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;枚举又叫穷举，是程序设计中最常用的算法之一，是一种很*很暴力的算法。要说它的方法，就
    
    </summary>
    
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
      <category term="算法" scheme="http://www.z16388.win/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM教程" scheme="http://www.z16388.win/tags/ACM%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于杉果社区发展的二三想法</title>
    <link href="http://www.z16388.win/2016/10/31/%E5%85%B3%E4%BA%8E%E6%9D%89%E6%9E%9C%E7%A4%BE%E5%8C%BA%E5%8F%91%E5%B1%95%E7%9A%84%E4%BA%8C%E4%B8%89%E6%83%B3%E6%B3%95/"/>
    <id>http://www.z16388.win/2016/10/31/关于杉果社区发展的二三想法/</id>
    <published>2016-10-31T04:52:28.000Z</published>
    <updated>2016-10-31T05:13:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在杉果一年多，不算久也不算短，也剁了很多东西。从开始的陌生，到现在的熟悉，杉果带给了我很多（剁手的机会）一步步走来，看着社区的变化，想要说很多，各种想法也很凌乱。总之，还是本着站着说话不腰疼的立场，说一说自己的看法吧。</p>
<p>&emsp;&emsp;社区要想发展，定位、内容、管理、活动、UI等等，各种都不能少，那么，我就结合现状，发表一下自己的意见。</p>
<p>&emsp;&emsp;首先在定位上，杉果社区应该是成为一个玩家的交流平台，而不是一个评价商品的地方。那么，我们就应该给客户提供这样一个地方。之前我在给员子的私信中提到了这一点。刚好，也看到了这样的一个功能即将要上线的消息，我觉得，在“垃圾内容”上，应该很快会有所改善。毕竟，比起谈论什么怎么还不发key，我们更想看到什么更好剁，大家一起剁什么。</p>
<p>&emsp;&emsp;当然，没了活动时的抱怨，干货也要有对不对。所以第二点比较重要的，就是“独家内容”。必须是杉果特色的，必须是别家都找不到的。像之前和游戏厂商黑恶势力的谈笑风生活动啦，这样的好机会不应该成为给直播平台带来流量的活动对不对，为什么要便宜别人呢。结合自己的社区，发布自己的独家内容，这一点很重要。而且，杉果电台虽然做的很良心，但是我觉得受众可能还不是很广。我觉得如果去b站发视频的话，可能会有更好的效果。</p>
<p>&emsp;&emsp;管理层面我觉得暂时还不需要考虑，因为没人（心疼）。当然，人多之后的打算也是要提前做的。分区，管理，内容，各种方面，都要去做，当然这是后话。</p>
<p>&emsp;&emsp;活动，社区活动从来不缺，看万圣节活动对不对，下面复制粘贴300多回复，多火热。但是，活动结束呢？没有员子水贴和某up主的视频，我觉得可能三四天都看不到新的内容。活动是带来流量的方法，但是也要做对活动。像这样直接拿key走的活动，给人一种廉价感，而且是为了奖品而活动。我觉得应该活动日常化，积分化，让所有的人都参与进来。不是什么新人活动啦，发评测活动啦，这样除了会让人注册一堆小号，或者多一堆没有营养的测评之外，没有别的用处了。记得很久以前听说社区会有大改，但是等了好久也没有见到变化。。。社区现状就是抱怨和领key的地方。。。</p>
<p>&emsp;&emsp;UI不说了，毕竟不是专业搞UI的，但是至少steam的api该更新一下了，移动端密码框的安全性还有不能用psn的话就去掉这个功能对不对。</p>
<p>&emsp;&emsp;总之，千言万语总结成一句话：希望杉果越来越好，至少，我会等着。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;在杉果一年多，不算久也不算短，也剁了很多东西。从开始的陌生，到现在的熟悉，杉果带给了我很多（剁手的机会）一步步走来，看着社区的变化，想要说很多，各种想法也很凌乱。总之，还是本着站着说话不腰疼的立场，说一说自己的看法吧。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;e
    
    </summary>
    
    
      <category term="游戏" scheme="http://www.z16388.win/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="心情" scheme="http://www.z16388.win/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>ACM常用模版</title>
    <link href="http://www.z16388.win/2016/10/30/ACM%E5%B8%B8%E7%94%A8%E6%A8%A1%E7%89%88/"/>
    <id>http://www.z16388.win/2016/10/30/ACM常用模版/</id>
    <published>2016-10-30T15:57:55.000Z</published>
    <updated>2016-10-30T16:06:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>求素数</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">su</span><span class="params">(<span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(b);i++) &#123;</div><div class="line">        <span class="keyword">if</span>(b%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最大公约数和最小公倍数</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span>  <span class="comment">//最大公约数</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> gcd(b,a%b);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span>  <span class="comment">//最小公倍数</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> a/gcd(a,b)*b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;求素数&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;li
    
    </summary>
    
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
      <category term="算法" scheme="http://www.z16388.win/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM教程" scheme="http://www.z16388.win/tags/ACM%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【ACM教程】2.4编程细节</title>
    <link href="http://www.z16388.win/2016/10/30/%E3%80%90ACM%E6%95%99%E7%A8%8B%E3%80%912-4%E7%BC%96%E7%A8%8B%E7%BB%86%E8%8A%82/"/>
    <id>http://www.z16388.win/2016/10/30/【ACM教程】2-4编程细节/</id>
    <published>2016-10-30T14:39:21.000Z</published>
    <updated>2016-10-30T15:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>细节决定成败，态度决定一切。</p>
</blockquote>
<p>&emsp;&emsp;在我们程序编写的过程中，有一些细节我们需要注意，这对你以后的代码质量都会有很大的影响。下面，我会介绍一些常见的细节。</p>
<h2 id="合理的缩进"><a href="#合理的缩进" class="headerlink" title="合理的缩进"></a>合理的缩进</h2><p>&emsp;&emsp;虽然编译器会忽略代码中一切空格和换行，但是一段乱奇葩早的缩进的代码真的是能逼死强迫症的。</p>
<p>&emsp;&emsp;常见的缩进方式是使用Tab键，默认4个空格。相同等级的语句不缩进，次级语句需要缩进，比如：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</div><div class="line">	sum+=i;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;在上面的代码中，我们看到循环体是累加计算，属于循环语句的次级语句，所以应当缩进。而输出是和循环同一等级的，所以要和for循环对齐。</p>
<p>&emsp;&emsp;除此之外，大括号的缩进也很重要，这一点在下面会介绍。</p>
<h2 id="统一的大括号"><a href="#统一的大括号" class="headerlink" title="统一的大括号"></a>统一的大括号</h2><p>&emsp;&emsp;大括号也是决定一个程序是否整齐的关键，我们常用以下两种方法：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> sum=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</div><div class="line">	&#123;</div><div class="line">		sum+=i;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> sum=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++) &#123;</div><div class="line">			sum+=i;</div><div class="line">		&#125;</div><div class="line">		System.out.println(sum);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="不同类型数据之间的计算"><a href="#不同类型数据之间的计算" class="headerlink" title="不同类型数据之间的计算"></a>不同类型数据之间的计算</h2><p>&emsp;&emsp;这种情况经常出现在ACM的题目中，就比如hdu2002和hdu2009。如果是把int型数据赋值给double是没有问题的，但是如果是double数据给int，就会出现精度的损失，造成计算的失误。</p>
<p>&emsp;&emsp;hdu2002中的分数4/3。如果直接在程序里这么写，程序会当成4整除3来计算，应当写成<code>4.0/3.0</code>。</p>
<p>&emsp;&emsp;hdu2009题如果想要写成<code>m=sqrt(m)</code>的话，就要保证m的类型是double类型，否则在赋值时会损失精度。</p>
<h2 id="程序的模块化"><a href="#程序的模块化" class="headerlink" title="程序的模块化"></a>程序的模块化</h2><p>&emsp;&emsp;模块化思想很重要，像C++和Java都是面向对象的编程语言，集成化程度很高。但是并不意味着我们写C就不要模块化。模块化的程序可读性高，便于修改。</p>
<p>&emsp;&emsp;比如hdu2005，判断是否是闰年的题目。我在判断是否是闰年时，写了一个函数，功能是：如果是闰年返回1，否则返回0。</p>
<p>&emsp;&emsp;当然不仅限于如此，假设某程序需要按照一个公式进行计算，但是后来我们突然想要改变计算过程，如果你把公式写在函数里，那么只需要修改函数就行了，避免了对主函数的修改。</p>
<h2 id="关于数组"><a href="#关于数组" class="headerlink" title="关于数组"></a>关于数组</h2><p>&emsp;&emsp;关于数组有两点需要注意。</p>
<p>&emsp;&emsp;首先是对下标的确定。我们知道，数组的下标和元素的序号是刚好相差1的。那么我们可以抛弃数组的第一个元素，只使用数组的第二个往后的元素，这样可以统一下标和元素序号，比如：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> a[<span class="number">101</span>];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++) &#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;再者，在申请数组大小的时候，我们可以多申请几个。有时候也可能要同时申请多组，这时候，推荐大家使用宏定义，比如：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></div><div class="line"><span class="keyword">int</span> a[N],b[N],c[N];</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;细节决定成败，态度决定一切。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在我们程序编写的过程中，有一些细节我们需要注意，这对你以后的代码质量都会有很大的影响。下面，我会介绍一些常见的细节。&lt;/p&gt;
&lt;h2 id=&quot;合理的缩进
    
    </summary>
    
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
      <category term="算法" scheme="http://www.z16388.win/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM教程" scheme="http://www.z16388.win/tags/ACM%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>hud2011-2020答案</title>
    <link href="http://www.z16388.win/2016/10/30/hud2011-2020%E7%AD%94%E6%A1%88/"/>
    <id>http://www.z16388.win/2016/10/30/hud2011-2020答案/</id>
    <published>2016-10-30T14:28:10.000Z</published>
    <updated>2016-11-02T10:26:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hdu2011-多项式求和"><a href="#hdu2011-多项式求和" class="headerlink" title="hdu2011 多项式求和"></a>hdu2011 多项式求和</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> m,n;</div><div class="line">    <span class="keyword">double</span> sum=<span class="number">0.0</span>,f=<span class="number">1.0</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</div><div class="line">    <span class="keyword">while</span>(m--) &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        sum=<span class="number">0.0</span>,f=<span class="number">1.0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            sum+=f/i;</div><div class="line">            f=<span class="number">-1.0</span>*f;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,sum);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hud2012-素数判定"><a href="#hud2012-素数判定" class="headerlink" title="hud2012 素数判定"></a>hud2012 素数判定</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> a)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> a*a+a+<span class="number">41</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">su</span><span class="params">(<span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=(<span class="keyword">int</span>)<span class="built_in">sqrt</span>(b);i++) &#123;</div><div class="line">        <span class="keyword">if</span>(b%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> x,y,flag=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y)&amp;&amp;(x||y)) &#123;</div><div class="line">        flag=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=y;i++)</div><div class="line">            <span class="keyword">if</span>(su(cal(i))==<span class="number">0</span>) flag=<span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(flag==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"OK\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Sorry\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2013-蟠桃记"><a href="#hdu2013-蟠桃记" class="headerlink" title="hdu2013 蟠桃记"></a>hdu2013 蟠桃记</h2><p>&emsp;&emsp;这是一道非常经典的OI明星题，原名是《猴子吃桃》，我在2008年初二的时候第一次接触这道题目，也是因为这一道题爱上了算法。这道题目是非常经典的循环题，类似的题目还有《王小二切大饼》、《母牛问题》等。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n,sum=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF) &#123;</div><div class="line">        sum=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</div><div class="line">            sum=<span class="number">2</span>*(sum+<span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2014-青年歌手大赛-评委会打分"><a href="#hdu2014-青年歌手大赛-评委会打分" class="headerlink" title="hdu2014 青年歌手大赛_评委会打分"></a>hdu2014 青年歌手大赛_评委会打分</h2><p>&emsp;&emsp;这是一道日常生活中常见的题目，唯一需要注意的就是在使用<code>sort()</code>函数时，需要排序的范围，这里还请大家思考一下。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> li[N];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">double</span> p;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF) &#123;</div><div class="line">        p=<span class="number">0.0</span>;</div><div class="line">        <span class="built_in">memset</span>(li,<span class="number">0</span>,<span class="keyword">sizeof</span>(li));</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;li[i]);</div><div class="line">        &#125;</div><div class="line">        sort(li+<span class="number">1</span>,li+n+<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++) &#123;</div><div class="line">            p+=li[i];</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,p/(n<span class="number">-2</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2015-偶数求和"><a href="#hdu2015-偶数求和" class="headerlink" title="hdu2015 偶数求和"></a>hdu2015 偶数求和</h2><p>&emsp;&emsp;这道题算是这几道里面比较麻烦的了，开始想的可能比较复杂，取第几项加几什么的很烦。但是后来发现，按照题目的意思直接去计算可能比较简单。</p>
<p>&emsp;&emsp;首先，我们的思路是算出每组数的第一个数<code>2+(m<em>2)\</em>i</code>,然后向后求和，去平均值。最后要判断一下最后一组是否完全，不全的话则需要除以<code>n%m</code>求平均值。</p>
<p>&emsp;&emsp;除此之外，还有输出的循环控制，最后一个元素的后面没有空格。代码如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n,m;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF) &#123;</div><div class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>,a=<span class="number">2</span>,flag=<span class="number">0</span>,i;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            sum+=a;</div><div class="line">            a+=<span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span>(i%m==<span class="number">0</span>) &#123;</div><div class="line">                flag++;</div><div class="line">                <span class="keyword">if</span>(flag!=<span class="number">1</span>)</div><div class="line">                    <span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,sum/m);</div><div class="line">                sum=<span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(n%m==<span class="number">0</span>)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">" %d\n"</span>,sum/(n%m));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2016-数据的交换输出"><a href="#hdu2016-数据的交换输出" class="headerlink" title="hdu2016 数据的交换输出"></a>hdu2016 数据的交换输出</h2><h2 id="hdu2017-字符串统计"><a href="#hdu2017-字符串统计" class="headerlink" title="hdu2017 字符串统计"></a>hdu2017 字符串统计</h2><h2 id="hdu2018-母牛的故事"><a href="#hdu2018-母牛的故事" class="headerlink" title="hdu2018 母牛的故事"></a>hdu2018 母牛的故事</h2><p>&emsp;&emsp;这是一道简单的动摇规划问题，这类问题的其他内容我们将在后来的教程中着重讨论。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> y)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(y&lt;<span class="number">4</span>) <span class="keyword">return</span> y;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> func(y<span class="number">-3</span>)+func(y<span class="number">-1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,func(n));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2019-数列有序！"><a href="#hdu2019-数列有序！" class="headerlink" title="hdu2019 数列有序！"></a>hdu2019 数列有序！</h2><h2 id="hdu2020-绝对值排序"><a href="#hdu2020-绝对值排序" class="headerlink" title="hdu2020 绝对值排序"></a>hdu2020 绝对值排序</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hdu2011-多项式求和&quot;&gt;&lt;a href=&quot;#hdu2011-多项式求和&quot; class=&quot;headerlink&quot; title=&quot;hdu2011 多项式求和&quot;&gt;&lt;/a&gt;hdu2011 多项式求和&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;
    
    </summary>
    
    
      <category term="hdu" scheme="http://www.z16388.win/tags/hdu/"/>
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>hdu1089-1096输入输出练习答案</title>
    <link href="http://www.z16388.win/2016/10/28/1089-1096%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BB%83%E4%B9%A0/"/>
    <id>http://www.z16388.win/2016/10/28/1089-1096输入输出练习/</id>
    <published>2016-10-28T11:40:22.000Z</published>
    <updated>2016-10-30T14:35:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;这是ACM基本的输入输出练习，答案如下：</p>
<p>hdu1089<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> a,b;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)!=EOF) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a+b);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1090<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> a,b,n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">while</span>(n--) &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a+b);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1091<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> a,b;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)&amp;&amp;(a||b)) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a+b);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1092<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n) &#123;</div><div class="line">        <span class="keyword">int</span> s=<span class="number">0</span>,b,i;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</div><div class="line">                s+=b;</div><div class="line">        &#125;        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1093<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">while</span>(n--) &#123;</div><div class="line">        <span class="keyword">int</span> a,b,i,s=<span class="number">0</span>;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=a;i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</div><div class="line">            s+=b;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1094<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF) &#123;</div><div class="line">        <span class="keyword">int</span> s=<span class="number">0</span>,b,i;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</div><div class="line">            s+=b;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1095<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> a,b;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)!=EOF) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n\n"</span>,a+b);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>hdu1096<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">while</span>(n--) &#123;</div><div class="line">        <span class="keyword">int</span> a,b,i,s=<span class="number">0</span>;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=a;i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</div><div class="line">            s+=b;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s);</div><div class="line">        <span class="keyword">if</span>(n!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;这是ACM基本的输入输出练习，答案如下：&lt;/p&gt;
&lt;p&gt;hdu1089&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/
    
    </summary>
    
    
      <category term="hdu" scheme="http://www.z16388.win/tags/hdu/"/>
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>hdu2000-2010答案</title>
    <link href="http://www.z16388.win/2016/10/28/hdu2000-2010/"/>
    <id>http://www.z16388.win/2016/10/28/hdu2000-2010/</id>
    <published>2016-10-28T11:16:10.000Z</published>
    <updated>2016-10-30T15:05:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hdu2000-ASCII码排序"><a href="#hdu2000-ASCII码排序" class="headerlink" title="hdu2000 ASCII码排序"></a>hdu2000 ASCII码排序</h2><p>&emsp;&emsp;这是一道简单的排序问题，可以直接使用sort函数解决，但是如果使用值交换的方法则需要注意回车的消除。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">char</span> a[<span class="number">4</span>],t;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c%c%c"</span>,&amp;a[<span class="number">1</span>],&amp;a[<span class="number">2</span>],&amp;a[<span class="number">3</span>])!=EOF) &#123;</div><div class="line">        getchar();</div><div class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]&gt;a[<span class="number">2</span>]) &#123;</div><div class="line">            t=a[<span class="number">1</span>];</div><div class="line">            a[<span class="number">1</span>]=a[<span class="number">2</span>];</div><div class="line">            a[<span class="number">2</span>]=t;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(a[<span class="number">2</span>]&gt;a[<span class="number">3</span>]) &#123;</div><div class="line">            t=a[<span class="number">2</span>];</div><div class="line">            a[<span class="number">2</span>]=a[<span class="number">3</span>];</div><div class="line">            a[<span class="number">3</span>]=t;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]&gt;a[<span class="number">2</span>]) &#123;</div><div class="line">            t=a[<span class="number">1</span>];</div><div class="line">            a[<span class="number">1</span>]=a[<span class="number">2</span>];</div><div class="line">            a[<span class="number">2</span>]=t;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%c %c %c\n"</span>,a[<span class="number">1</span>],a[<span class="number">2</span>],a[<span class="number">3</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">char</span> str[<span class="number">3</span>];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;str) &#123;</div><div class="line">        sort(str,str+<span class="number">3</span>);</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;str[<span class="number">0</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;str[<span class="number">1</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;str[<span class="number">2</span>]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2001-计算两点间的距离"><a href="#hdu2001-计算两点间的距离" class="headerlink" title="hdu2001 计算两点间的距离"></a>hdu2001 计算两点间的距离</h2><p>&emsp;&emsp;这是一道简单的计算题，第一次使用了数学函数和双精度的数，没有太多需要注意的地方。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> x1,y1,x2,y2;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2) &#123;</div><div class="line">        <span class="keyword">double</span> jie=<span class="built_in">sqrt</span>((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,jie);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2002-计算球体体积"><a href="#hdu2002-计算球体体积" class="headerlink" title="hdu2002 计算球体体积"></a>hdu2002 计算球体体积</h2><p>&emsp;&emsp;这是一道求球体体积的计算题，需要注意的是，这里可能会出现整数和实数之间的乘法，需要注意的是题目中的4/3需要写成4.0/3.0，这一点很容易犯错。</p>
<p>&emsp;&emsp;还有一点需要注意的是，我们应当使用题目中所给的pi值，否则结果可能会出现一定的误差。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415927</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> r;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;r) &#123;</div><div class="line">        <span class="keyword">double</span> jie=<span class="number">4.0</span>*PI*r*r*r/<span class="number">3.0</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,jie);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2003-求绝对值"><a href="#hdu2003-求绝对值" class="headerlink" title="hdu2003 求绝对值"></a>hdu2003 求绝对值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415927</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> r;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;r) &#123;</div><div class="line">        <span class="keyword">double</span> jie=<span class="built_in">fabs</span>(r);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,jie);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>#hdu2004 成绩转换</p>
<p>&emsp;&emsp;这道题需要仔细审题，一定要注意分数的范围，无论是上界还是下界。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> grade;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;grade)!=EOF) &#123;</div><div class="line">        <span class="keyword">if</span>(grade&gt;=<span class="number">90</span>&amp;&amp;grade&lt;=<span class="number">100</span>) <span class="built_in">printf</span>(<span class="string">"A\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(grade&gt;=<span class="number">80</span>&amp;&amp;grade&lt;=<span class="number">89</span>) <span class="built_in">printf</span>(<span class="string">"B\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(grade&gt;=<span class="number">70</span>&amp;&amp;grade&lt;=<span class="number">79</span>) <span class="built_in">printf</span>(<span class="string">"C\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(grade&gt;=<span class="number">60</span>&amp;&amp;grade&lt;=<span class="number">69</span>) <span class="built_in">printf</span>(<span class="string">"D\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(grade&gt;=<span class="number">0</span>&amp;&amp;grade&lt;=<span class="number">59</span>) <span class="built_in">printf</span>(<span class="string">"E\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Score is error!\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2005-第几天？"><a href="#hdu2005-第几天？" class="headerlink" title="hdu2005 第几天？"></a>hdu2005 第几天？</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">runn</span><span class="params">(<span class="keyword">int</span> yy)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(yy%<span class="number">400</span>==<span class="number">0</span>||(yy%<span class="number">100</span>!=<span class="number">0</span>&amp;&amp;yy%<span class="number">4</span>==<span class="number">0</span>))</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span> ;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> y,m,d,sum;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d/%d/%d"</span>,&amp;y,&amp;m,&amp;d)!=EOF) &#123;</div><div class="line">        sum = <span class="number">0</span> ;</div><div class="line">        <span class="keyword">switch</span>(m<span class="number">-1</span>) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">11</span> : sum+=<span class="number">30</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">10</span> : sum+=<span class="number">31</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">9</span>  : sum+=<span class="number">30</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">8</span>  : sum+=<span class="number">31</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">7</span>  : sum+=<span class="number">31</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">6</span>  : sum+=<span class="number">30</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">5</span>  : sum+=<span class="number">31</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">4</span>  : sum+=<span class="number">30</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>  : sum+=<span class="number">31</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>  :<span class="keyword">if</span> (runn(y)==<span class="number">1</span>) sum+=<span class="number">29</span>;</div><div class="line">                     <span class="keyword">else</span> sum+=<span class="number">28</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>  : sum+=<span class="number">31</span>;</div><div class="line">        &#125;</div><div class="line">        sum+=d;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2006-求奇数的乘积"><a href="#hdu2006-求奇数的乘积" class="headerlink" title="hdu2006 求奇数的乘积"></a>hdu2006 求奇数的乘积</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">int</span> liste[<span class="number">100</span>];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF) &#123;</div><div class="line">        <span class="keyword">int</span> i;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;liste[i]);</div><div class="line">        <span class="keyword">int</span> sum=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            <span class="keyword">if</span>(liste[i]%<span class="number">2</span>!=<span class="number">0</span>)</div><div class="line">                sum*=liste[i];</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2007-平方和与立方和"><a href="#hdu2007-平方和与立方和" class="headerlink" title="hdu2007 平方和与立方和"></a>hdu2007 平方和与立方和</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> m,n,t,i;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n)!=EOF) &#123;</div><div class="line">        <span class="keyword">if</span>(m&gt;n) &#123;</div><div class="line">            t=m;</div><div class="line">            m=n;</div><div class="line">            n=t;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> s1=<span class="number">0</span>,s2=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(i=m;i&lt;=n;i++) &#123;</div><div class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>) s1=s1+i*i;</div><div class="line">            <span class="keyword">else</span> s2=s2+i*i*i;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,s1,s2);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2008-数值统计"><a href="#hdu2008-数值统计" class="headerlink" title="hdu2008 数值统计"></a>hdu2008 数值统计</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">double</span> liste[<span class="number">100</span>];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n) &#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;liste[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            <span class="keyword">if</span>(liste[i]&lt;<span class="number">0</span>) a++;</div><div class="line">            <span class="keyword">if</span>(liste[i]==<span class="number">0</span>) b++;</div><div class="line">            <span class="keyword">if</span>(liste[i]&gt;<span class="number">0</span>) c++;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a,b,c);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2009-求数列的和"><a href="#hdu2009-求数列的和" class="headerlink" title="hdu2009 求数列的和"></a>hdu2009 求数列的和</h2><p>&emsp;&emsp;这一题看起来很简单，但是需要进行不同类型数据的运算。这一点还是比较容易犯一些错误的，大家需要注意一些。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> sum;</div><div class="line">    <span class="keyword">int</span> m,n;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n)!=EOF) &#123;</div><div class="line">        sum=<span class="number">0.0</span>;</div><div class="line">        <span class="keyword">double</span> mm=m;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">            sum+=mm;</div><div class="line">            mm=<span class="built_in">sqrt</span>(mm);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,sum);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hdu2010-水仙花数"><a href="#hdu2010-水仙花数" class="headerlink" title="hdu2010 水仙花数"></a>hdu2010 水仙花数</h2><p>&emsp;&emsp;这是一道很经典的题目，可能需要使用比较多的判断。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> m,n,flag;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n)!=EOF) &#123;</div><div class="line">        <span class="keyword">int</span> i=m;</div><div class="line">        flag=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(i=m;i&lt;=n;i++) &#123;</div><div class="line">            <span class="keyword">int</span> a,b,c;</div><div class="line">            a=i/<span class="number">100</span>;</div><div class="line">            b=i/<span class="number">10</span>%<span class="number">10</span>;</div><div class="line">            c=i%<span class="number">10</span>;</div><div class="line">            <span class="keyword">if</span>(i==a*a*a+b*b*b+c*c*c) &#123;</div><div class="line">                <span class="keyword">if</span>(flag==<span class="number">0</span>) &#123;</div><div class="line">                    flag++;</div><div class="line">                    <span class="built_in">printf</span>(<span class="string">"%d"</span>,i);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    flag++;</div><div class="line">                    <span class="built_in">printf</span>(<span class="string">" %d"</span>,i);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"no\n"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hdu2000-ASCII码排序&quot;&gt;&lt;a href=&quot;#hdu2000-ASCII码排序&quot; class=&quot;headerlink&quot; title=&quot;hdu2000 ASCII码排序&quot;&gt;&lt;/a&gt;hdu2000 ASCII码排序&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;这是
    
    </summary>
    
    
      <category term="hdu" scheme="http://www.z16388.win/tags/hdu/"/>
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>【ACM教程】2.2从排序开始</title>
    <link href="http://www.z16388.win/2016/10/28/%E3%80%90ACM%E6%95%99%E7%A8%8B%E3%80%912-1.5%E4%BB%8E%E6%8E%92%E5%BA%8F%E5%BC%80%E5%A7%8B/"/>
    <id>http://www.z16388.win/2016/10/28/【ACM教程】2-1.5从排序开始/</id>
    <published>2016-10-28T08:29:49.000Z</published>
    <updated>2016-10-31T10:40:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;今天看群里有同学说：“看dalao的博客，今天晚上估计要讲C++框架了”，这我能忍？让你们猜到了，我该多没面子啊。所以呢，今天我就把教程改了一下，顺便更好地串联后面的内容。</p>
<p>&emsp;&emsp;如题，我们今天要讲的是排序，排序是写程序中，比较重要的一个部分，以后也会专门做一个章节去讲，今天只涉及一些简单的排序方法。</p>
<h2 id="这他喵叫排序？——桶排序"><a href="#这他喵叫排序？——桶排序" class="headerlink" title="这他喵叫排序？——桶排序"></a>这他喵叫排序？——桶排序</h2><p>&emsp;&emsp;一直讲排序，可能会有些枯燥，我们先来点好玩的。</p>
<p>&emsp;&emsp;桶排序是最简单的排序算法，思路也是最奇葩的，奇葩到我都不想把它算作排序。那么它具体是怎么来的呢，我们来看下面一个题目：</p>
<blockquote>
<p>&emsp;&emsp;在一次体育比赛中，某个选手的动作将会由多名裁判进行打分，分值在0～10之间的整数。输入一个数组，存放有N名裁判给出的分数(1&lt;=N&lt;=10000)，输出要求从大到小输出裁判打出的分数。</p>
</blockquote>
<p>&emsp;&emsp;这道题很简单，有同学该说了，“我知道！用冒泡！”行，冒泡的确可以解决这个问题，但是时间复杂度可能会比较高。这道题，有一种更好的方法，那就是我们这一节的主角——桶排序，今天学了可能一辈子都再也用不到的排序方法。那么，究竟应该怎么去做呢？</p>
<p>&emsp;&emsp;首先声明一个长度为11的数组<code>a[11]</code>，再将该数组的每个元素都赋值为0。当选手得分为s时，进行操作<code>a[s]++</code>。这样进行一遍便利之后，我们数组中每个元素都将表示得s分的次数。这样，我们只需要将s打印<code>a[s]</code>次，就会得到我们需要的结果，代码如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></div><div class="line"><span class="keyword">int</span> grade[N];</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> n,a[<span class="number">11</span>];</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;grade[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</div><div class="line">        a[grade[i]]++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&gt;=<span class="number">1</span>;i--) &#123;</div><div class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>) <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=a[i];j++) &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,i);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="基础中的基础，“牛奶杯”排序"><a href="#基础中的基础，“牛奶杯”排序" class="headerlink" title="基础中的基础，“牛奶杯”排序"></a>基础中的基础，“牛奶杯”排序</h2><p>&emsp;&emsp;有一杯水，一杯牛奶，想让他们两个换一下，那么我们得需要另一个杯子作为中转站。这是我们在写程序中，进行值交换的最简单的方法。比如航电上的hdu2000题：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2000" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2000</a>这就是一道使用牛奶杯排序法的题目,我们只需要一个中间变量就可以实现两个变量值的交换，然后比较三次达到排序的目的。这种方法比较麻烦，适用于样本比较少的排序。</p>
<h2 id="C-，带带我（利用C-的STL函数排序）"><a href="#C-，带带我（利用C-的STL函数排序）" class="headerlink" title="C++，带带我（利用C++的STL函数排序）"></a>C++，带带我（利用C++的STL函数排序）</h2><p>&emsp;&emsp;其实在竞赛中，我们最常使用的是C++的STL中的排序函数。（STL是C++的标准模版库）</p>
<p>&emsp;&emsp;<code>sort()</code>函数是我们最常用的排序函数，它在<code>algorithm</code>头文件中，使用时需要在你的程序上方添加一行：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div></pre></td></tr></table></figure>
<p>&emsp;&emsp;排序函数在比赛中都是被允许的，它拥有三个参数：</p>
<blockquote>
<p>sort(起始地址,终止地址,[比较方法])</p>
</blockquote>
<p>&emsp;&emsp;其中比较方法不是必须参数，它的使用方法我们将会在下一节进行说明。那么，一个使用<code>sort()</code>函数进行排序的简单程序如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> a[<span class="number">11</span>];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;</div><div class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">    &#125;</div><div class="line">    sort(a+<span class="number">1</span>,a+<span class="number">10</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;刚刚的那道hdu2000也可以使用这种方法去做，代码如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">char</span> str[<span class="number">3</span>];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;str) &#123;</div><div class="line">        sort(str,str+<span class="number">3</span>);</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;str[<span class="number">0</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;str[<span class="number">1</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;str[<span class="number">2</span>]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>&emsp;&emsp;除了排序，初始化也很重要。在做和图、矩阵有关的题目时，我们经常会对二维数组进行初始化。将两个无关点之间的距离初始化为无穷，或者是给单位矩阵非对角线元素进行的初始化。C++给我们提供了memset() 函数实现初始化，这个函数在cstring头文件中。下面是memset() 函数的参数：</p>
<blockquote>
<p>Memset(数组名，初始化内容，初始化范围)；</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;今天看群里有同学说：“看dalao的博客，今天晚上估计要讲C++框架了”，这我能忍？让你们猜到了，我该多没面子啊。所以呢，今天我就把教程改了一下，顺便更好地串联后面的内容。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;如题，我们今天要讲的是排序，排序是写程
    
    </summary>
    
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
      <category term="算法" scheme="http://www.z16388.win/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM教程" scheme="http://www.z16388.win/tags/ACM%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>大连交通大学 软件竞赛协会介绍</title>
    <link href="http://www.z16388.win/2016/10/22/aboutdjac/"/>
    <id>http://www.z16388.win/2016/10/22/aboutdjac/</id>
    <published>2016-10-22T05:46:19.000Z</published>
    <updated>2016-10-23T01:56:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于大连交通大学软件竞赛协会"><a href="#关于大连交通大学软件竞赛协会" class="headerlink" title="关于大连交通大学软件竞赛协会"></a>关于大连交通大学软件竞赛协会</h1><p>&emsp;&emsp;大连交通大学软件竞赛协会（以下简称：协会），前身是大连交通大学ACM俱乐部。ACM俱乐部是由参加ACM竞赛的学长们自发组织成立的学习交流性组织，多年来诞生了我校大批技术大牛。前辈们参赛诸多，为我校捧得诸多荣誉。协会由学生自发组织，大连交通大学软件学院支持，进行算法相关的学习与培训，参加ACM和蓝桥杯为主的算法竞赛，为校争光。</p>
<h1 id="协会招新"><a href="#协会招新" class="headerlink" title="协会招新"></a>协会招新</h1><p>&emsp;&emsp;原则上，协会面向大连交通大学全体四年制／五年制全日制本科生开放，有以下条件者优先：</p>
<ul>
<li>参加过ACM／OI等竞赛的</li>
<li>对算法感兴趣或接触过的</li>
<li>学习过C/C++或Java</li>
<li>大二以上</li>
</ul>
<p>&emsp;&emsp;联系我们：<br><img src="http://oda2v68ht.bkt.clouddn.com/temp_qrcode_share_216063864.png" alt=""><br>&emsp;&emsp;&emsp;&emsp;QQ群号：216063864</p>
<h1 id="大连交通大学竞赛相关政策"><a href="#大连交通大学竞赛相关政策" class="headerlink" title="大连交通大学竞赛相关政策"></a>大连交通大学竞赛相关政策</h1><p>&emsp;&emsp;根据《大连交通大学关于大学生科技创新活动的若干规定》（大交大发[2006】63号]、《大连交通大学指导学生科技创新活动教师工作量核算及奖励办法》（大交大发[2007]147号）等文件精神，为进一步加强和规范我校大学生科技创新活动的深入发展，培养学生的创新精神和实践能力，鼓励学生积极参与科技创新活动，鼓励教师积极参与指导大学生科技创新活动、浓厚校园学术科技氛围，提高大学生创新能力和综合素质，颁发了大学生科技创新活动实施细则。详见：<a href="http://202.199.128.101/cxjy/shownews.asp?id=82" target="_blank" rel="external">http://202.199.128.101/cxjy/shownews.asp?id=82</a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=26355070&auto=0&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于大连交通大学软件竞赛协会&quot;&gt;&lt;a href=&quot;#关于大连交通大学软件竞赛协会&quot; class=&quot;headerlink&quot; title=&quot;关于大连交通大学软件竞赛协会&quot;&gt;&lt;/a&gt;关于大连交通大学软件竞赛协会&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;大连交通大学软件竞赛
    
    </summary>
    
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
      <category term="ACM教程" scheme="http://www.z16388.win/tags/ACM%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>MAC下hexo的安装与使用</title>
    <link href="http://www.z16388.win/2016/10/06/MAC%E4%B8%8Bhexo%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.z16388.win/2016/10/06/MAC下hexo的安装与使用/</id>
    <published>2016-10-06T15:37:24.000Z</published>
    <updated>2016-10-06T15:55:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;不知道就是造了什么孽，电脑，又炸了。唉～没想到，我这么肝，倒下的竟然是我的电脑，也是可怕。</p>
<p>&emsp;&emsp;闲话不多说了。哥哥把他的Mac接我救急用了，刚到手还没捂热乎呢，只是随意的装了一些必须的东西。什么java啦，jsp啦，xcode啦。总之搞了很多，但是博客这个东西一直没搞好，因为一直没去研究Mac下GitHub的使用。今天，借着这个炸的机会，把我的博客给挪到啦Mac上，继续更新啦。</p>
<p>&emsp;&emsp;讲道理，苹果的工业设计还是很好的。到手没几天，已经熟悉的七七八八了；当然也不能说熟悉到windows这种程度，但是也是到了能够日常使用，应付一些简单的coding。我们话说回来啊，这个hexo我本来是打算放弃掉的。因为前几天，我用微软的azure搭建了一个Wordpress的博客。但是令人蛋疼的是，DreamSpark订阅的微软Azure它不能使用域名绑定功能，这就很尴尬了，谁会顶着一个超长的链接去看你的博客呢对不对。所以既然电脑炸了，没了办法，那只能研究mac上怎么去使用hexo了。来，我们闲话不多说，正式开始了。</p>
<h2 id="第一步-安装Node-js"><a href="#第一步-安装Node-js" class="headerlink" title="第一步 安装Node.js"></a>第一步 安装Node.js</h2><p>&emsp;&emsp;这是hexo必须的一步，毕竟是基于Node.js的框架嘛。至于在哪里下载，怎么安装，以及GitHub的注册，域名什么的，我就不过多赘述了，这在我之前的博客里面都有的。</p>
<h2 id="第二步-安装hexo"><a href="#第二步-安装hexo" class="headerlink" title="第二步 安装hexo"></a>第二步 安装hexo</h2><p>&emsp;&emsp;这里直接使用Node.js的npm去安装，在终端中，浏览到你想要存放博客内容的文件夹，比如<code>cd /Applications/blog</code>。之后执行hexo的安装命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g hexo</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;安装好之后，把你之前博客的内容放到里面去；如果没有，则执行<code>hexo init</code>。然后就可以正常地去使用你的hexo了，和windows环境下的操作完全一样。</p>
<p>&emsp;&emsp;唉～说点题外话，讲道理，上天真的是逼我这学期要好好学习啊，害怕。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;不知道就是造了什么孽，电脑，又炸了。唉～没想到，我这么肝，倒下的竟然是我的电脑，也是可怕。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;闲话不多说了。哥哥把他的Mac接我救急用了，刚到手还没捂热乎呢，只是随意的装了一些必须的东西。什么java啦，jsp啦，
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.z16388.win/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>联想Y400折腾第二天</title>
    <link href="http://www.z16388.win/2016/09/30/%E8%81%94%E6%83%B3Y400%E6%8A%98%E8%85%BE%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>http://www.z16388.win/2016/09/30/联想Y400折腾第二天/</id>
    <published>2016-09-30T13:45:23.000Z</published>
    <updated>2016-09-30T14:45:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;我也是够闲的。本着不抛弃，不放弃地原则，抢救我的笔记本小Y。虽然从早上开机到现在，我。。。不不不，不能奶！总之，倒持了一天吧，不说成果怎么样，也是有一些收获的。相比于昨天的硬件，我把今天折腾的方向转向了软件。</p>
<p>&emsp;&emsp;嘛，有一只老学长，作为长者，在计算机的各种心肝脾肺肾上都有涉猎，我很是佩服的一颗赛艇。其实我昨天就想请教他的，但是硅脂到了，也就没麻烦他了。但是，对于硬件靠脚踹，软件做系统的我，想要搞个大新闻出来，也是没那么容易的。</p>
<p>&emsp;&emsp;看了一上午的《齐木楠雄的灾难》，真的希望万能的齐神能够保佑我。打开了AIDA64，一直监测着CPU的温度——毕竟我是怀疑CPU出问题了的。然后我就发现，AIDA64有个功能，叫做“生成报告”，随手就点了进去。然后，搞了一大串东西出来。我就看啊看，天哪，这个东西把我电脑里各种信息都搞出来了，比香港记者的新闻还要详细，不能忍。我就往下看，看到了超频这一项，发现我的CPU超频了15%。我就怀疑，是不是超频让CPU过热了，才造成的死机。<br><img src="http://oda2v68ht.bkt.clouddn.com/y400IMG20160930150757.jpg" alt=""></p>
<p>&emsp;&emsp;我就去百毒了一下，怎么去关掉超频。看了一会儿觉得太麻烦，就放弃了。哎~还要进BIOS,还不如等我哥把他的笔记本给我寄过来呢。。。好麻烦~好麻烦。</p>
<p>&emsp;&emsp;刚好，这会儿去问候了一下我们的老学长。老学长提了提裤腰回复道：“你这是睿频吧”。</p>
<p>&emsp;&emsp;天哪，睿频，睿频是啥，我不能说我不知道什么是睿频吧，多丢人。百毒，百毒，赶紧百毒。很关键啊，有一篇很关键的博文告诉我了睿频和超频的区别。好吧，不是这玩意儿的错，那我只能继续求助长者了。</p>
<p>&emsp;&emsp;“是不是你的系统炸了”。</p>
<p>&emsp;&emsp;ありえない、ありえない！有时候关机之后都开不开，怎么可能是软件的问题，肯定是硬件的问题。</p>
<p>&emsp;&emsp;“我觉得不是CPU导致的，你硅脂没涂好吧。”</p>
<p>&emsp;&emsp;嘛~不排除这种可能，但是至少比之前的强很多啊。</p>
<p>&emsp;&emsp;长者的话总是言简意赅：“唔。。。那你去看看事件管理器吧。”</p>
<p>&emsp;&emsp;事件管理器？事件管理器！事件管理器はなに～？わがりｒない！！！はやく百毒！百毒百毒愛してる～！嗯嗯，百毒不负众望，在众多广告和莆田系医院和工口网站中，我找到了正确答案。</p>
<p>&emsp;&emsp;找啊找啊，摸索了两分钟，搞清楚了这是个什么东西。あああああ～一堆错误和警告啊，作为程序猿，肯定要看错误嘛，警告是个什么东西!程序猿会看的警告，只有FBI的好吗！！！咳~咳~~</p>
<p>&emsp;&emsp;在事件管理器中，我看到了一个比较敏感的时间。2016年9月26日晚上21：40：23。没错了！就是这个时间!第一次自动关机的时候！只要看每次错误关机的时间，以及前面发生了什么！不就知道错误在哪里了吗！！！我真是太机智了!!<br><img src="http://oda2v68ht.bkt.clouddn.com/y400IMG20160930153239.jpg" alt=""></p>
<p>&emsp;&emsp;这时候，我看到了一连串的四个来自CPU的错误，天哪！肯定是它！绝对是CPU！还说不是！呵呵呵!被我打脸了吧！哈哈哈哈~但是。。。我又去查了一下，好吧，然而并没有什么卵关系，这是因特尔节能技术的那个功能。哎，又一次失望了。<br><img src="http://oda2v68ht.bkt.clouddn.com/y400IMG_20160930_171722.jpg" alt=""></p>
<p>&emsp;&emsp;但是，我又多看了一眼！！！就是你了！犯人就是你!!!!<br><img src="http://oda2v68ht.bkt.clouddn.com/y400IMG20160930154946.jpg" alt=""></p>
<p>&emsp;&emsp;查了一下，果然，这个服务！就是鲁大师！！！修改的！！！！！鲁大娘！！！！原来罪魁祸首！！！就是你啊！！！！害怕。然后我去开启这个服务，但是发现，缺少模块，还原服务的话虽然可以做到，但是我觉得可以顺便做一个系统嘛，一年了也该换了。再说今天一天都没。。。。不不不！不能奶!好吧，再死机我就装win10。<br><img src="http://oda2v68ht.bkt.clouddn.com/y400IMG20160930161411.jpg" alt=""><br><img src="http://oda2v68ht.bkt.clouddn.com/y400IMG_20160930_165759.jpg" alt=""></p>
<p>&emsp;&emsp;胆儿肥了之后，我又上FF14排了个本，打了2小时！@#￥%。（23333懂的都懂）都没有问题。嘛~今天是撑过去了，但是，还是再观察一下吧。反正万一修不好的话（这不是钦定！），有我哥的笔记本嘛~233333。讲道理，这么赛艇的大新闻，还是第一次搞。嘛~自己修的话，还是比那些个电脑店放心靠谱的~。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;我也是够闲的。本着不抛弃，不放弃地原则，抢救我的笔记本小Y。虽然从早上开机到现在，我。。。不不不，不能奶！总之，倒持了一天吧，不说成果怎么样，也是有一些收获的。相比于昨天的硬件，我把今天折腾的方向转向了软件。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;嘛
    
    </summary>
    
    
      <category term="笔记本" scheme="http://www.z16388.win/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>联想Y400拆机换硅脂过程</title>
    <link href="http://www.z16388.win/2016/09/29/%E8%81%94%E6%83%B3Y400%E6%8B%86%E6%9C%BA%E6%8D%A2%E7%A1%85%E8%84%82%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.z16388.win/2016/09/29/联想Y400拆机换硅脂过程/</id>
    <published>2016-09-29T08:02:08.000Z</published>
    <updated>2016-09-29T09:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;最近笔记本出了一个问题，从前天开始，玩着玩着就炸了。从讨鬼传开始，一玩就自动断电，一点办法都没有。前天晚上开始炸了1次，昨天炸了3次，但是还是可以玩的。然后查了一下，可能是散热的问题，就去网上买了硅脂换了。今天换上，还是有些问题，但是整个拆机的过程还是很惊险刺激的，下面分享给大家：</p>
<p>&emsp;&emsp;首先是我们今天的患者，联想Y400。</p>
<p><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_110836.jpg" alt=""></p>
<p>&emsp;&emsp;然后是我们的硅脂：MX-4</p>
<p><img src="http://oda2v68ht.bkt.clouddn.com/IMG20160929114420.jpg" alt=""></p>
<p>&emsp;&emsp;接下来是工具介绍：</p>
<p><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_110956.jpg" alt=""></p>
<blockquote>
<p>一套小螺丝刀<br>一个用来吸螺丝的螺丝刀<br>一个拆笔记本专用的小螺丝刀<br>棉签<br>酒精<br>雕刻刀（不知道干什么用）<br>清灰刷</p>
</blockquote>
<p>&emsp;&emsp;之后进行的是Y400的标准拆解过程，将电池拆掉，后盖打开，拆掉硬盘光驱以及内存条。<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_111502.jpg" alt=""></p>
<p>&emsp;&emsp;然后我们可以拆一下网卡的排线。小心翼翼的用镊子夹掉，然后卸下唯一一个螺丝，就可以拿掉了。<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_113502.jpg" alt=""></p>
<p>&emsp;&emsp;接下来是拆键盘了。键盘还是比较好拆的，把两个螺丝卸掉，就可以抠出来了。<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_111502_2.jpg" alt=""></p>
<p>&emsp;&emsp;然后我们要把键盘面的电源键排线，触控板排线和键盘排线拆掉；再把反面的风扇排线拆掉，再卸掉螺丝，就可以拆掉键盘面的面板了：<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_121556_1.jpg" alt=""><br>&emsp;&emsp;这是卸掉的键盘面板：<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_125348.jpg" alt=""></p>
<p>&emsp;&emsp;拆掉之后，把摄像头排线和硬盘排线拆掉，再卸掉主板的两个螺丝就可以拆了。因为有一个风扇的排线不是太好拆，所以我就没拆，但是这样已经可以拆散热件了：<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_130650.jpg" alt=""><br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_130912.jpg" alt=""></p>
<p>&emsp;&emsp;我怕刮花了屏幕，所以就垫了一本书，然后拧掉散热片的螺丝，就可以涂硅脂了。<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_131616.jpg" alt=""><br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_131620.jpg" alt=""></p>
<p>&emsp;&emsp;涂完之后我就迫不及待地装上去了，虽然打开了，表示存活，也开了下摄像头测试了一下没问题，但是还是会炸。没办法，只能等过年回家找售后了。这学期的话，先学习好吧。这是上天给我的学习的好机会，玩什么游戏！学习！<br><img src="http://oda2v68ht.bkt.clouddn.com/IMG_20160929_134437.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;最近笔记本出了一个问题，从前天开始，玩着玩着就炸了。从讨鬼传开始，一玩就自动断电，一点办法都没有。前天晚上开始炸了1次，昨天炸了3次，但是还是可以玩的。然后查了一下，可能是散热的问题，就去网上买了硅脂换了。今天换上，还是有些问题，但是整个拆机的过程还
    
    </summary>
    
    
      <category term="笔记本" scheme="http://www.z16388.win/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github博客搭建教程</title>
    <link href="http://www.z16388.win/2016/09/13/hexo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>http://www.z16388.win/2016/09/13/hexo-github博客搭建教程/</id>
    <published>2016-09-13T10:24:56.000Z</published>
    <updated>2016-09-13T11:14:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;之前写了一篇域名绑定的教程，但是只有域名没有东西也不行啊。其实早在前几天就想写这样一篇总结性教程了，但是一直没有抽出时间。我这个博客最初也是在朋友的帮助之下搭建的，这个技术并不难用，所以我想让更多的人能够使用它。</p>
<p>&emsp;&emsp;hexo是一个基于node.jsd静态博客框架。另外，我们可以使用github pages来存放我们的博客。这才有了现在静态博客的黄金搭档hexo+github。</p>
<h2 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h2><p>我们需要以下的账号：</p>
<p>&emsp;&emsp;<a href="https://github.com/" target="_blank" rel="external">github</a>：用于存放页面，是一个非常流行的开源社区，拥有众多的开源项目。</p>
<p>&emsp;&emsp;<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>:用来实现博客的评论和点赞。</p>
<p>&emsp;&emsp;<a href="www.qiniu.com">七牛云</a>：用来存放博客中使用的图片。</p>
<p>&emsp;&emsp;<a href="https://www.aliyun.com" target="_blank" rel="external">阿里云</a>：如果你需要一个域名，可以到阿里云购买。</p>
<p>&emsp;&emsp;<a href="https://web.umeng.com" target="_blank" rel="external">CNZZ</a>：如果你需要统计你的博客访问，可以注册一个CNZZ账号，或者是在你的博客首页加上google统计。</p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>你需要下载以下几种软件：</p>
<p>&emsp;&emsp;<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>:用来生成静态页面，hexo的环境。</p>
<p>&emsp;&emsp;<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git Bash</a>:把本地的内容提交到github上的软件。</p>
<p>&emsp;&emsp;<a href="http://markdownpad.com/" target="_blank" rel="external">Markdown Pad</a>:用来写博客。</p>
<p>&emsp;&emsp;<a href="https://notepad-plus-plus.org/" target="_blank" rel="external">NotePad++</a>:一款比较好的记事本，用来修改配置文件。</p>
<p>&emsp;&emsp;在github创建一个新的项目，命名为：</p>
<blockquote>
<p>YourUserName.github.io</p>
</blockquote>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>&emsp;&emsp;Node.js和Git Bash安装好之后，首先，创建一个文件夹,比如叫<code>blog</code>，用于存放你的博客相关的文件。然后进入文件夹，开始安装hexo。</p>
<p>&emsp;&emsp;右键，<code>git bash here</code>,打开git bash，然后运行安装命令：</p>
<blockquote>
<p>npm install -g hexo</p>
</blockquote>
<p>&emsp;&emsp;然后执行初始化命令：</p>
<blockquote>
<p>hexo init</p>
</blockquote>
<p>&emsp;&emsp;打开根目录下的_config.yml配置文件，修改最后的信息为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line"></div><div class="line">     type: git</div><div class="line"></div><div class="line">     repo: Your_git_io_url</div><div class="line"></div><div class="line">     branch: master</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;按照备注修改相关的参数，比如博客的名字，你的姓名等等。除此之外，你还可以到hexo的官网的主题页面，去下载你喜欢的主题，放在themes文件夹下。需要修改的参数大部分在主题的配置文件上。当然这一步你以后都可以去做。</p>
<p>&emsp;&emsp;执行命令：</p>
<blockquote>
<p>npm install hexo-deployer-git –save</p>
</blockquote>
<p>&emsp;&emsp;执行配置命令：</p>
<blockquote>
<p>hexo deploy （或者是缩写：hexo d）</p>
</blockquote>
<p>&emsp;&emsp;至此，博客搭建完成，你可以在浏览器输入<a href="http://YourUserName.github.io来访问。每次对博客修改之后，我们都需要先生成(" target="_blank" rel="external">http://YourUserName.github.io来访问。每次对博客修改之后，我们都需要先生成(</a><code>hexo g</code>)，再提交到git(<code>hexo d</code>)。当然，我们可以先进行本地预览，运行本地的服务器(<code>hexo s</code>)，然后用浏览器访问<localhost:4000>。<code>hexo g</code>和<code>hexo d</code>可以合并成一个指令：<code>hexo d -g</code></localhost:4000></p>
<p>&emsp;&emsp;hexo的常用命令和写博客使用的markdown语法请参考：</p>
<blockquote>
<p>hexo常用命令：<a href="http://z16388.win/2016/09/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/" target="_blank" rel="external">http://z16388.win/2016/09/09/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</a><br>Markdown常用语法：<a href="http://z16388.win/2016/09/09/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/" target="_blank" rel="external">http://z16388.win/2016/09/09/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;之前写了一篇域名绑定的教程，但是只有域名没有东西也不行啊。其实早在前几天就想写这样一篇总结性教程了，但是一直没有抽出时间。我这个博客最初也是在朋友的帮助之下搭建的，这个技术并不难用，所以我想让更多的人能够使用它。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.z16388.win/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python常用知识</title>
    <link href="http://www.z16388.win/2016/09/12/Python%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/"/>
    <id>http://www.z16388.win/2016/09/12/Python常用知识/</id>
    <published>2016-09-12T14:04:46.000Z</published>
    <updated>2016-09-28T05:12:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;想要学Python很久了。一是流行，再是强大。现在写一篇博客，整理一下常用的知识点，以备复习。</p>
<h2 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1.数据类型"></a>1.数据类型</h2><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><p>Python可以处理任意大小的整数<br>可以用<code>0xff00</code>的方法表示十六进制整数</p>
<hr>
<p>浮点数处理的精度也比较高，但是太高精度需要用科学记数法表示</p>
<hr>
<p>字符串用单引号或双引号括起来<br>转义字符大体同C<br>大量需要转义字符的地方，可以简写成：<br><code>r’\\\\\’</code><br>Python允许字符串内换行，使用…来表示：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">print(str1</div><div class="line">...str2</div><div class="line">...str3)</div></pre></td></tr></table></figure></p>
<hr>
<p>布尔值：<code>true false</code><br>可使用<code>and or not</code> 运算</p>
<hr>
<p>Python中的强制类型转换方法如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;s=input(<span class="string">'birth:'</span>)</div><div class="line">&gt;&gt;&gt;birth=int(s)</div></pre></td></tr></table></figure></p>
<p>注意，<code>input()</code>返回的数据类型是str。</p>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><code>/</code> 除法，结果一定是浮点型<br><code>//</code> 整除<br><code>%</code> 求余</p>
<h2 id="2-字符串和字符编码"><a href="#2-字符串和字符编码" class="headerlink" title="2.字符串和字符编码"></a>2.字符串和字符编码</h2><h3 id="字符串和整数的转换"><a href="#字符串和整数的转换" class="headerlink" title="字符串和整数的转换"></a>字符串和整数的转换</h3><p><code>ord()</code>函数，获取字符的整数表示<br><code>chr()</code>函数，把编码转换成对应的字符<br>可以使用转义字符表示，例如：<code>\u4e2d</code>会显示代表的汉字”中”</p>
<h3 id="字符串和字节"><a href="#字符串和字节" class="headerlink" title="字符串和字节"></a>字符串和字节</h3><p><code>str</code>是字符串类型<br><code>bytes</code>是字节类型，需要用带<code>b</code>前缀的单引号或双引号表示：<br><code>x=b’ABC’</code><br><code>‘ABC’</code>和<code>b’ABC’</code>占用的内存不同，后者每个字符都只占用一个字节<br><code>encode()</code>方法可以把<code>str</code>转换成指定的<code>bytes</code>，例如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;<span class="string">'ABC'</span>.encode(<span class="string">'ascii'</span>)</div><div class="line">&gt;&gt;&gt;<span class="string">'中文'</span>.encode(<span class="string">'utf-8'</span>)</div></pre></td></tr></table></figure></p>
<p>把字节转换成字符串需要使用<code>decode()</code>方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;<span class="string">'ABC'</span>.decode(<span class="string">'ascii'</span>)</div></pre></td></tr></table></figure></p>
<p><code>len()</code>函数，用于计算<code>str</code>中的字符数和<code>bytes</code>中的字节数（英文字符只占一个字节，中文字符经常占3个字节）</p>
<hr>
<p>要保证编译的python文件能够正确显示中文，我们除了在编写环境中指定编码类型为<code>utf-8</code>之外，通常还要在开头加上两行：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div></pre></td></tr></table></figure></p>
<p>第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；<br>第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。</p>
<p><code>replace()</code>方法，用于取代字符串中某个字符，但是不影响字符串本身：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;a=<span class="string">'abc'</span></div><div class="line">&gt;&gt;&gt;a.replace(<span class="string">'a'</span>,<span class="string">'A'</span>)</div><div class="line"><span class="string">'Abc'</span></div><div class="line">&gt;&gt;&gt;a</div><div class="line"><span class="string">'abc'</span></div></pre></td></tr></table></figure></p>
<h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3><p>同C的格式化类似<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello, %s'</span> % <span class="string">'world'</span></div></pre></td></tr></table></figure></p>
<p><code>%</code>开头的叫做占位字符，常用的占位字符有：</p>
<blockquote>
<p>%&emsp;&emsp;&emsp;&emsp;整数</p>
<hr>
<p>%f&emsp;&emsp;&emsp;&emsp;浮点数</p>
<hr>
<p>%s&emsp;&emsp;&emsp;&emsp;字符串</p>
<hr>
<p>%x&emsp;&emsp;&emsp;&emsp;十六进制整数</p>
<hr>
</blockquote>
<p>格式化整数和浮点数可以指定是否补0或者确定小数的位数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%2d-%02d'</span> % (<span class="number">3</span>, <span class="number">1</span>)</div><div class="line"><span class="string">' 3-01'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%.2f'</span> % <span class="number">3.1415926</span></div><div class="line"><span class="string">'3.14'</span></div></pre></td></tr></table></figure></p>
<h2 id="3-list和tuple"><a href="#3-list和tuple" class="headerlink" title="3.list和tuple"></a>3.list和tuple</h2><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>list是Python内置的一种数据类型，列表。它是一种有序的集合，可以随时添加和删除其中的元素，声明方式如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name=[<span class="string">'tom'</span>,<span class="string">'cat'</span>,<span class="string">'car'</span>]</div></pre></td></tr></table></figure></p>
<p>可以使用<code>len()</code>函数获取list元素的个数<br>用索引来访问每个元素，索引从<code>0</code>开始：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name[<span class="number">0</span>]</div><div class="line">tom</div></pre></td></tr></table></figure></p>
<p>可以使用<code>-1</code>做索引，访问最后一个元素，依次类推，可以访问倒数第二，第三个元素：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name[<span class="number">-1</span>]</div><div class="line">car</div><div class="line">&gt;&gt;&gt;name[<span class="number">-2</span>]</div><div class="line">cat</div></pre></td></tr></table></figure></p>
<p>可以使用<code>append()</code>方法，向list中追加元素到末尾：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name.append(<span class="string">'apple'</span>)</div><div class="line">&gt;&gt;&gt;name</div><div class="line">[<span class="string">'tom'</span>,<span class="string">'cat'</span>,<span class="string">'car'</span>,<span class="string">'apple'</span>]</div></pre></td></tr></table></figure></p>
<p>可以使用<code>insert()</code>方法，将元素插入到指定位置，比如下标为1的位置：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name.insert(<span class="number">1</span>,<span class="string">'banana'</span>)</div><div class="line">&gt;&gt;&gt;name</div><div class="line">[<span class="string">'tom'</span>,<span class="string">'banana'</span>,<span class="string">'cat'</span>,<span class="string">'car'</span>,<span class="string">'apple'</span>]</div></pre></td></tr></table></figure></p>
<p>可以使用<code>pop()</code>方法，删除list末尾的元素：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name.pop()</div><div class="line">&gt;&gt;&gt;name</div><div class="line">[<span class="string">'tom'</span>,<span class="string">'banana'</span>,<span class="string">'cat'</span>,<span class="string">'car'</span>]</div></pre></td></tr></table></figure></p>
<p>可以使用<code>pop(i)</code>方法，删除指定位置的元素：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name.pop(<span class="number">1</span>)</div><div class="line">&gt;&gt;&gt;name</div><div class="line">[<span class="string">'tom'</span>,<span class="string">'cat'</span>,<span class="string">'car'</span>]</div></pre></td></tr></table></figure></p>
<p>可以使用直接赋值的方法将某元素替换成别的元素：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;name.[<span class="number">2</span>]=<span class="string">'apache'</span></div><div class="line">&gt;&gt;&gt;name</div><div class="line">[<span class="string">'tom'</span>,<span class="string">'cat'</span>,<span class="string">'apache'</span>]</div></pre></td></tr></table></figure></p>
<p>list中可以存放不同类型的元素，也可以存放list（可以看做二维数组）<br>如果list中没有元素，就是一个空list，长度为0。</p>
<h3 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h3><p>tuple叫做元组，一旦初始化就不能修改，可以使用索引来访问每个元素，但是不能赋值成另外的元素。因为它无法被修改，所以更加安全。</p>
<p>tuple的定义方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;t=(<span class="number">1</span>,<span class="number">2</span>)</div><div class="line">&gt;&gt;&gt;t</div><div class="line">(<span class="number">1</span>,<span class="number">2</span>)</div><div class="line"></div><div class="line">&gt;&gt;&gt;t=()</div><div class="line">&gt;&gt;&gt;t</div><div class="line">()</div><div class="line"></div><div class="line">&gt;&gt;&gt;t=(<span class="number">1</span>,)</div><div class="line">&gt;&gt;&gt;t</div><div class="line">(<span class="number">1</span>,)</div></pre></td></tr></table></figure></p>
<p>不能使用<code>t=(1)</code>的方法来定义只有一个元素的tuple，这会让python认为它是个括号，而将t认为是一个整形变量。</p>
<h2 id="4-dict和set"><a href="#4-dict和set" class="headerlink" title="4.dict和set"></a>4.dict和set</h2><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><p><code>dict</code>即C++中的<code>map</code>，全称是<code>dictionary</code>，具有极快的查找速度。它的元素有两种，一种叫做<code>key</code>，另一种叫做<code>value</code>。前者是查询的参数，后者则是它所对应的值。<code>dict</code>的声明方法如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;d=&#123;<span class="string">'tom'</span>:<span class="number">90</span>,<span class="string">'cat'</span>:<span class="number">80</span>,<span class="string">'apache'</span>:<span class="number">70</span>&#125;</div><div class="line">&gt;&gt;&gt;d[<span class="string">'tom'</span>]</div><div class="line"><span class="number">90</span></div></pre></td></tr></table></figure></p>
<p>当然，我们在“放入”的时候也很方便：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;d[<span class="string">'apache'</span>]=<span class="number">60</span></div><div class="line">&gt;&gt;&gt;d[<span class="string">'apache'</span>]</div><div class="line"><span class="number">60</span></div></pre></td></tr></table></figure></p>
<p>每个<code>key</code>只对应一个值，后面赋的值会将前面的覆盖。</p>
<p>我们可以使用<code>in</code>来判断一个<code>key</code>是否存在：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;<span class="string">'toom'</span> <span class="keyword">in</span> d</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure></p>
<p>可以使用<code>get</code>方法来获取指定的<code>value</code>。如果不存在，可以返回指定的值：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;d.get(<span class="string">'tom'</span>)</div><div class="line"><span class="number">90</span></div><div class="line">&gt;&gt;&gt;d.get(<span class="string">'tomm'</span>,<span class="number">-1</span>)</div><div class="line"><span class="number">-1</span></div></pre></td></tr></table></figure></p>
<p>dict的特点</p>
<blockquote>
<ol>
<li>查找和插入的速度极快，不会随着key的增加而变慢；</li>
<li>需要占用大量的内存，内存浪费多。</li>
</ol>
</blockquote>
<h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p><code>set</code>是一组key的集合，但不存储value。因为key不能重复，所以在<code>set</code>中没有重复的元素。要创建一个<code>set</code>需要提供一个list作为输入集合：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;s=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</div><div class="line">&gt;&gt;&gt;s</div><div class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</div><div class="line"></div><div class="line">&gt;&gt;&gt;s=set([<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>])</div><div class="line">&gt;&gt;&gt;s</div><div class="line">&gt;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</div></pre></td></tr></table></figure></p>
<p>通过<code>add(key)</code>方法可以添加到set中：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;s.add(<span class="number">4</span>)</div><div class="line">&gt;&gt;&gt;s</div><div class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</div></pre></td></tr></table></figure></p>
<p>通过<code>remove(key)</code>方法可以删除元素：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;s.remove(<span class="number">4</span>)</div><div class="line">&gt;&gt;&gt;s</div><div class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</div></pre></td></tr></table></figure></p>
<p><code>set</code>可以看成无序无重复元素的集合，可以进行交集，并集等操作：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;s1=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</div><div class="line">&gt;&gt;&gt;s2=set([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div><div class="line">&gt;&gt;&gt;s1&amp;s2</div><div class="line">&#123;<span class="number">2</span>,<span class="number">3</span>&#125;</div><div class="line">&gt;&gt;&gt;s1|s2</div><div class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</div></pre></td></tr></table></figure></p>
<h2 id="5-判断与循环"><a href="#5-判断与循环" class="headerlink" title="5.判断与循环"></a>5.判断与循环</h2><h3 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h3><p>Python也有<code>if</code>和<code>else</code>语句，但是和C比起来又显得非常“任性”。它没有小括号，也没有大括号，具体例子如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">age = <span class="number">20</span></div><div class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</div><div class="line">	print(<span class="string">"your age is %d"</span>,age)</div><div class="line">	print(<span class="string">'adult'</span>)</div></pre></td></tr></table></figure></p>
<p>根据Python的缩进规则，如果满足<code>if</code>后的条件，则会执行缩进的两个<code>print</code>语句，<code>else</code>也类似：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">age = <span class="number">3</span></div><div class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</div><div class="line">    print(<span class="string">'your age is'</span>, age)</div><div class="line">    print(<span class="string">'adult'</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'your age is'</span>, age)</div><div class="line">    print(<span class="string">'teenager'</span>)</div></pre></td></tr></table></figure></p>
<p>注意不要少写了<code>：</code>。</p>
<p>Python中还有<code>elif</code>语句，也就是<code>else if</code>的缩写，所以if语句的完整版就是：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> &lt;条件判断<span class="number">1</span>&gt;:</div><div class="line">    &lt;执行<span class="number">1</span>&gt;</div><div class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">2</span>&gt;:</div><div class="line">    &lt;执行<span class="number">2</span>&gt;</div><div class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">3</span>&gt;:</div><div class="line">    &lt;执行<span class="number">3</span>&gt;</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    &lt;执行<span class="number">4</span>&gt;</div></pre></td></tr></table></figure></p>
<h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p><code>for…in</code>循环，可以依次将list或tuple中的每个元素迭代出来：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">names=[<span class="string">'tom'</span>,<span class="string">'cat'</span>,<span class="string">'apache'</span>]</div><div class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</div><div class="line">	print(name)</div></pre></td></tr></table></figure></p>
<p>执行这段代码，就会依次打印出<code>names</code>中的每个元素：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tom</div><div class="line">cat</div><div class="line">apache</div></pre></td></tr></table></figure></p>
<hr>
<p><code>for x in …</code>循环，可以将元素依次代入变量<code>x</code>，然后执行缩进的语句，例如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sum=<span class="number">0</span>;</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]:</div><div class="line">	sum+=x;</div><div class="line">print(sum)</div></pre></td></tr></table></figure></p>
<p>这段代码显示的结果是0-10的累加和</p>
<p>Python提供了<code>range()</code>函数来生成一个整数序列，比如<code>range(5)</code>生成的是从0开始的5个整数：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;list(rangr(<span class="number">5</span>))</div><div class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div></pre></td></tr></table></figure></p>
<p>则0累加到100的程序可以写成：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sum=<span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">101</span>):</div><div class="line">	sum+=x</div><div class="line">print(sum)</div></pre></td></tr></table></figure></p>
<hr>
<p>Python中也有<code>while</code>循环，用法和C类似：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sum=<span class="number">0</span></div><div class="line">n=<span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> n&lt;<span class="number">101</span>:</div><div class="line">	sum+=n</div><div class="line">	n+=<span class="number">1</span></div><div class="line">print(sum)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;想要学Python很久了。一是流行，再是强大。现在写一篇博客，整理一下常用的知识点，以备复习。&lt;/p&gt;
&lt;h2 id=&quot;1-数据类型&quot;&gt;&lt;a href=&quot;#1-数据类型&quot; class=&quot;headerlink&quot; title=&quot;1.数据类型&quot;&gt;&lt;/a&gt;1
    
    </summary>
    
    
      <category term="Python" scheme="http://www.z16388.win/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>博客第三天</title>
    <link href="http://www.z16388.win/2016/09/11/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%89%E5%A4%A9/"/>
    <id>http://www.z16388.win/2016/09/11/博客第三天/</id>
    <published>2016-09-11T14:29:29.000Z</published>
    <updated>2016-09-11T15:36:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;今天零零星星看了好多东西。早上知乎给我推送了一篇文章，讲的是一些比较好的Python资料。随便点进去一个看了，然后就收藏在手机上了，打算下床用电脑看。之后研究了一会儿插入网易云音乐歌单，然后看了一点儿java，打算写一点网络程序。</p>
<p>&emsp;&emsp;一口气零零散散搞了好多东西，但是什么都没有搞成，什么都没有学到。看来以后应当集中精力去做一件事，一步一个脚印，走好做好，这样才能有更多的收获吧。感觉应该先去整理一下Python的基础知识，然后再看java的多线程和网络，再做一个小东西。当然，六级也要开始准备了，之前计划的日语学习也要开始了。</p>
<p>&emsp;&emsp;要做的事情还有很多，，，</p>
<p>&emsp;&emsp;博客的话，明天把插入的音乐改掉，侧边栏减少内容，想办法增加右上角的功能按钮。另外再研究一下今天刚刚搞的Font-Awesome的用法。</p>
<p>&emsp;&emsp;学习是一件很难的事，但是一点一点来，总有能够学成的时候，加油。Yes you can！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;今天零零星星看了好多东西。早上知乎给我推送了一篇文章，讲的是一些比较好的Python资料。随便点进去一个看了，然后就收藏在手机上了，打算下床用电脑看。之后研究了一会儿插入网易云音乐歌单，然后看了一点儿java，打算写一点网络程序。&lt;/p&gt;
&lt;p&gt;&amp;e
    
    </summary>
    
    
      <category term="心情" scheme="http://www.z16388.win/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>在博客中插入网易云音乐歌单</title>
    <link href="http://www.z16388.win/2016/09/11/%E5%9C%A8%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95/"/>
    <id>http://www.z16388.win/2016/09/11/在博客中插入网易云音乐歌单/</id>
    <published>2016-09-11T03:37:44.000Z</published>
    <updated>2016-09-11T04:09:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;因为版权的原因，网易云音乐已经禁止了歌单的“生成外链播放器”的功能，只能单首歌曲的进行。之前还有查看代码的方法，现在连生成外链播放器的代码都找不到了。但是，方法还是有的。</p>
<p>&emsp;&emsp;首先我们找到以前的代码，以我的歌单为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; </div><div class="line">marginheight=&quot;0&quot; width=240 height=100 </div><div class="line">src=&quot;http://music.163.com/outchain/player?type=0&amp;id=462197233&amp;auto=0&amp;height=430&quot;&gt;</div><div class="line">&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;我们来解释一下里面几个比较有用的几个参数：</p>
<blockquote>
<p>&emsp;&emsp;1.第二行里面的 width=240 height=100 是用来控制播放器的大小的。但是要注意的是，播放器左侧有图片，如果要完全显示的话，宽度一定要长于270<br>&emsp;&emsp;2.第三行有两个比较有用的参数，一个是id 一个是auto。id改成你歌单的ID，可以在网页端进入你的歌单，在地址栏里查看；auto是自动播放属性，0是关闭，非0即开启。后面的height没有任何意义。</p>
</blockquote>
<p>&emsp;&emsp;另外歌单的歌曲顺序由加入歌单的顺序决定，这点很麻烦，在歌曲时一定要注意次序。</p>
<p>&emsp;&emsp;令人遗憾的是，网易云音乐的歌单插入毕竟是已经禁止了的功能，有些时候会出现资源加载失败的状况。所以说，想要让自己的博客唱起来，还是只能单个音乐地用。如果想要更好的效果，还是要选用第三方播放器。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;因为版权的原因，网易云音乐已经禁止了歌单的“生成外链播放器”的功能，只能单首歌曲的进行。之前还有查看代码的方法，现在连生成外链播放器的代码都找不到了。但是，方法还是有的。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先我们找到以前的代码，以我的歌单为例：
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.z16388.win/tags/hexo/"/>
    
      <category term="音乐" scheme="http://www.z16388.win/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>博客第二天</title>
    <link href="http://www.z16388.win/2016/09/10/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>http://www.z16388.win/2016/09/10/博客第二天/</id>
    <published>2016-09-10T10:12:05.000Z</published>
    <updated>2016-09-11T14:32:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;昨天转了很多以前写的东西，搞域名解析到一点多，直到笔记本没电，写博客真心会上瘾啊。</p>
<p>&emsp;&emsp;上午十一点多到一期，等开题，谁知道搞到四点一道都没做出来，真心心累。回到寝室什么都不想干，浑身乏力，好久没有体会过学习的辛苦了。</p>
<p>&emsp;&emsp;总之，从昨天起，开始坚持写吧，也算是对自己的督促。养成习惯，记录自己今天学到了什么，有哪些不做。积少成多，这么做真真是极好的233333。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;昨天转了很多以前写的东西，搞域名解析到一点多，直到笔记本没电，写博客真心会上瘾啊。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;上午十一点多到一期，等开题，谁知道搞到四点一道都没做出来，真心心累。回到寝室什么都不想干，浑身乏力，好久没有体会过学习的辛苦了。
    
    </summary>
    
    
      <category term="心情" scheme="http://www.z16388.win/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>【ACM教程】3.2递归</title>
    <link href="http://www.z16388.win/2016/09/10/%E3%80%90ACM%E6%95%99%E7%A8%8B%E3%80%913-2%E9%80%92%E5%BD%92/"/>
    <id>http://www.z16388.win/2016/09/10/【ACM教程】3-2递归/</id>
    <published>2016-09-10T07:12:02.000Z</published>
    <updated>2016-11-02T11:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二节-递归"><a href="#第二节-递归" class="headerlink" title="第二节 递归"></a>第二节 递归</h1><p>&emsp;&emsp;递归是一个语言中最难理解的内容之一，它是通过自己调用自己的方法，来进行运算的方法。关于递归有一个非常有意思的定义：</p>
<blockquote>
<p>递归：参见“递归”</p>
</blockquote>
<p>&emsp;&emsp;在生活中，我们也会遇到这样的递归例子：</p>
<blockquote>
<p>导员：“你给任课老师请假就行了”。<br>任课老师：“去让你导员给你写个假条”。</p>
</blockquote>
<p>&emsp;&emsp;其实在以前的学习中，我们也遇到过递归的思想，数学归纳法就是：</p>
<blockquote>
<p>1是正整数<br>如果k是正整数，证明k+1也是正整数<br>若①和②满足，则证明序列n是正整数序列</p>
</blockquote>
<p>&emsp;&emsp;C语言和C++是支持递归的。但是，在使用递归的时候，大家应该注意跳出递归的条件，不然就会发生上面导员和任课老师模型之间的无限循环问题。C/C++语言中的递归一般是通过函数来实现的：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">func(n) &#123;</div><div class="line">    <span class="keyword">if</span>(xxx) &#123;</div><div class="line">        func(n+<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> </div><div class="line">    <span class="keyword">return</span> xxx;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>&emsp;&emsp;像我们常用的求最大公约数最小公倍数的方法，和hdu2018的母牛问题，都是递归的经典题目。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第二节-递归&quot;&gt;&lt;a href=&quot;#第二节-递归&quot; class=&quot;headerlink&quot; title=&quot;第二节 递归&quot;&gt;&lt;/a&gt;第二节 递归&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;递归是一个语言中最难理解的内容之一，它是通过自己调用自己的方法，来进行运算的方法。关
    
    </summary>
    
    
      <category term="ACM" scheme="http://www.z16388.win/tags/ACM/"/>
    
      <category term="算法" scheme="http://www.z16388.win/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM教程" scheme="http://www.z16388.win/tags/ACM%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【游戏安利】噬神者</title>
    <link href="http://www.z16388.win/2016/09/10/%E3%80%90%E6%B8%B8%E6%88%8F%E5%AE%89%E5%88%A9%E3%80%91%E5%99%AC%E7%A5%9E%E8%80%85/"/>
    <id>http://www.z16388.win/2016/09/10/【游戏安利】噬神者/</id>
    <published>2016-09-10T00:56:37.000Z</published>
    <updated>2016-09-10T07:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【游戏安利】噬神者"><a href="#【游戏安利】噬神者" class="headerlink" title="【游戏安利】噬神者"></a>【游戏安利】噬神者</h1><p>&emsp;&emsp;噬神者是我非常喜欢的游戏系列，它由日本万代南梦宫制作发行，初版在psp上，二代之后以及我要安利的狂怒解放和解放重生都是在PS4，PSV，Steam三平台都有的。</p>
<p>&emsp;&emsp;要说玩，那玩的时间可不少，但是让我安利的话，我却不知道怎么说了。于是，我就问我的联机群里的小伙伴们，如果让他们安利，他们会怎么做。</p>
<p><img src="http://oda2v68ht.bkt.clouddn.com/52d6887499d8d8a4954a9a04bd809ad9.jpg" alt="噬神者"></p>
<blockquote>
<p>乳摇 大枪 啪啪啪</p>
</blockquote>
<p>&emsp;&emsp;群里的月冷dalao是这么说的。</p>
<p><img src="http://oda2v68ht.bkt.clouddn.com/u=3855970304,1491459108&amp;fm=21&amp;gp=0.jpg" alt="alisha"></p>
<blockquote>
<p>mh式的操作，精美的人设，未来风，武器多且酷炫，各种大触的子弹，alisa</p>
</blockquote>
<p>&emsp;&emsp;群里的英灵Archer是这么说的。</p>
<p>&emsp;&emsp;嘛~这里顺便说一下，噬神者Steam联机群：</p>
<blockquote>
<p>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;533840872</p>
</blockquote>
<p>&emsp;&emsp;但是，其实让我来说的话，作为一个动漫风格，剧情很好的共斗游戏，和朋友在一起联机的体验是最好的。当劳累了一天，和朋友们在游戏里用子弹对♂轰时，仿佛一天的压力都没了。</p>
<p>&emsp;&emsp;嘛~总之，我安利一个人也是马马虎虎的。拉他进群，下午就买游戏了。。。</p>
<p>&emsp;&emsp;还是放一个宣传片吧，官方的安利还是更可靠点的呢2333。</p>
<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://share.acg.tv/flash.swf" flashvars="aid=5574173&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;【游戏安利】噬神者&quot;&gt;&lt;a href=&quot;#【游戏安利】噬神者&quot; class=&quot;headerlink&quot; title=&quot;【游戏安利】噬神者&quot;&gt;&lt;/a&gt;【游戏安利】噬神者&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;噬神者是我非常喜欢的游戏系列，它由日本万代南梦宫制作发行，初
    
    </summary>
    
    
      <category term="游戏安利" scheme="http://www.z16388.win/tags/%E6%B8%B8%E6%88%8F%E5%AE%89%E5%88%A9/"/>
    
      <category term="游戏" scheme="http://www.z16388.win/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="Steam" scheme="http://www.z16388.win/tags/Steam/"/>
    
      <category term="心情" scheme="http://www.z16388.win/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
